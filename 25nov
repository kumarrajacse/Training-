<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.example</groupId>
    <artifactId>your-project-name</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
    </properties>

    <build>
        <plugins>
            <!-- Configure PMD plugin for linting -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
                <version>3.15.0</version> <!-- Use the latest version -->
                <executions>
                    <execution>
                        <phase>verify</phase>
                        <goals>
                            <goal>pmd</goal>
                        </goals>
                        <configuration>
                            <targetJdk>1.8</targetJdk>
                            <rulesets>
                                <ruleset>your-ruleset.xml</ruleset>
                                <!-- Add more rulesets if needed -->
                            </rulesets>
                            <failOnViolation>true</failOnViolation>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
=====================================



<?xml version="1.0"?>
<ruleset name="My Rules">
    <rule ref="category/java/bestpractices.xml/AvoidUsingHardCodedIP"/>
    <!-- Add more rules as needed -->
</ruleset>
========================================================================



pipeline {
    agent any

    stages {
        stage('Checkout') {
            steps {
                // Check out the code from your version control system
                checkout scm
            }
        }

        stage('Build') {
            steps {
                // Build the Maven project
                script {
                    def mvnHome = tool 'Maven'
                    sh "${mvnHome}/bin/mvn clean install"
                }
            }
        }

        stage('Run PMD') {
            steps {
                script {
                    // Set up PMD options
                    def pmdHome = tool 'PMD'
                    def pmdReportFile = 'target/pmd-report.xml'
                    def sourceCodeDir = 'src/main/java'

                    // Run PMD
                    sh """
                        ${pmdHome}/bin/run.sh pmd \
                        -d ${sourceCodeDir} \
                        -f xml \
                        -R ${pmdReportFile}
                    """
                }
            }
        }

        stage('Publish PMD Report') {
            steps {
                // Archive the PMD report for later reference
                archiveArtifacts artifacts: 'target/pmd-report.xml', onlyIfSuccessful: true

                // Publish the PMD report to Jenkins
                publishHTML([
                    allowMissing: false,
                    alwaysLinkToLastBuild: false,
                    keepAll: true,
                    reportDir: 'target',
                    reportFiles: 'pmd-report.xml',
                    reportName: 'PMD Report',
                    reportTitles: 'PMD Report'
                ])
            }
        }
    }

    post {
        always {
            // Clean up any temporary files or resources
            cleanWs()
        }
    }
}
